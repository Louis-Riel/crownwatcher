[{"id":"118d5eeb.c5a0c1","type":"tab","label":"Lumiere Salon","disabled":false,"info":""},{"id":"d2844952.000748","type":"tab","label":"Tracker","disabled":false,"info":""},{"id":"7e638570.8d34ac","type":"tab","label":"LV Lights","disabled":false,"info":""},{"id":"b79beae9.58ac18","type":"tab","label":"IR Mapper","disabled":true,"info":""},{"id":"ac9a3ddb.65fcc","type":"tab","label":"Event","disabled":true,"info":""},{"id":"8d37e764.15c8f8","type":"websocket-client","path":"ws://irtracker/ws","tls":"","wholemsg":"false"},{"id":"46973b5e.af9224","type":"websocket-listener","path":"ws://192.168.1.30/events","wholemsg":"false"},{"id":"72d9a66f.54bf78","type":"websocket in","z":"118d5eeb.c5a0c1","name":"irws","server":"","client":"8d37e764.15c8f8","x":90,"y":260,"wires":[["812f0ce4.4bcee"]]},{"id":"812f0ce4.4bcee","type":"switch","z":"118d5eeb.c5a0c1","name":"isjson","property":"payload","propertyType":"msg","rules":[{"t":"regex","v":"^\\{.*\\}$","vt":"str","case":false}],"checkall":"true","repair":false,"outputs":1,"x":210,"y":260,"wires":[["e25c1f1a.fdf8e"]]},{"id":"e25c1f1a.fdf8e","type":"json","z":"118d5eeb.c5a0c1","name":"","property":"payload","action":"","pretty":true,"x":330,"y":260,"wires":[["76add8e8.573328"]]},{"id":"76add8e8.573328","type":"switch","z":"118d5eeb.c5a0c1","name":"Event/State","property":"payload","propertyType":"msg","rules":[{"t":"hask","v":"eventBase","vt":"str"},{"t":"hask","v":"freeram","vt":"str"}],"checkall":"false","repair":false,"outputs":2,"x":470,"y":260,"wires":[["8423d6f2.e94818"],["c45e94a8.c5e598"]]},{"id":"f697da59.f0656","type":"websocket out","z":"118d5eeb.c5a0c1","name":"","server":"","client":"8d37e764.15c8f8","x":320,"y":140,"wires":[],"inputLabels":["test"]},{"id":"b94fd317.13f0f","type":"inject","z":"118d5eeb.c5a0c1","name":"Connect","props":[{"p":"payload"}],"repeat":"3","crontab":"","once":true,"onceDelay":"3","topic":"","payload":"Connect","payloadType":"str","x":100,"y":140,"wires":[["f697da59.f0656"]]},{"id":"1cb58cc4.36ba43","type":"catch","z":"118d5eeb.c5a0c1","name":"","scope":null,"uncaught":false,"x":100,"y":200,"wires":[["74aafbbd.7f6d34"]]},{"id":"748cd3bd.2a88fc","type":"function","z":"118d5eeb.c5a0c1","name":"Media State","func":"var state=\"\";\nif (msg.payload.includes(\"STATE_TRANS:\")) {\n    if (msg.payload.includes(\"OMX_StateIdle => OMX_StateExecuting :\")) {\n        state=\"playing\";\n    }\n\n    if (msg.payload.includes(\"OMX_StateExecuting => OMX_StateIdle :\")) {\n        state=\"stopped\";\n    }\n}\n\n//if (msg.payload.includes(\"Media focus: paused\")) {\n//    state=\"paused\";\n//}\n\nif (msg.payload.includes(\"Media focus: playing\")) {\n    state=\"playing\";\n}\n\n//if (msg.payload.includes(\"ANDROID_MEDIA_SESSION is ACTIVE_SUSPENDED\")) {\n//    state=\"paused\";\n//}\n\nif (msg.payload.includes(\"Releasing audio content focus\")) {\n    if (flow.get(\"tv\") != \"paused\")\n        state=\"stopped\";\n}\nif (msg.payload.includes(\"Acquiring audio content focus\")) {\n    state=\"playing\";\n}\n\nif (state != \"\"){\n    flow.set(\"tv\",state);\n    \n    node.status({ \n        fill:\"green\",\n        shape:\"dot\",\n        text: `${state} ${flow.get(\"locklevel\")?\"locked\":\"\"}`\n    });\n\n    if (!flow.get(\"locklevel\")) {\n        if (state == \"playing\") {\n            return {payload:{level:0}};\n        }\n        if (state == \"paused\") {\n            return {payload:{level:2}};\n        }\n        if (state == \"stopped\") {\n            return {payload:{level:3}};\n        }\n    }\n}\n\nreturn null;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":790,"y":220,"wires":[["97dee70b.9ee8d8"]]},{"id":"8423d6f2.e94818","type":"switch","z":"118d5eeb.c5a0c1","name":"Events","property":"payload.eventBase","propertyType":"msg","rules":[{"t":"eq","v":"DigitalPin","vt":"str"},{"t":"eq","v":"IRDecoder","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":630,"y":140,"wires":[["cf4dfdf4.a8f6c"],["fb0bee1b.54697"]]},{"id":"c45e94a8.c5e598","type":"switch","z":"118d5eeb.c5a0c1","name":"App State?","property":"payload","propertyType":"msg","rules":[{"t":"hask","v":"freeram","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":610,"y":400,"wires":[["d23e892f.19ccb8","449a40a6.b012","14d12709.578b79"]]},{"id":"d23e892f.19ccb8","type":"switch","z":"118d5eeb.c5a0c1","name":"SPI memleak","property":"payload.freeram","propertyType":"msg","rules":[{"t":"lte","v":"700000","vt":"num"}],"checkall":"true","repair":false,"outputs":1,"x":790,"y":400,"wires":[["3463ab46.59ef64"]]},{"id":"449a40a6.b012","type":"switch","z":"118d5eeb.c5a0c1","name":"DMA is low","property":"payload.MALLOC_CAP_DMA","propertyType":"msg","rules":[{"t":"lte","v":"10000","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":790,"y":460,"wires":[["3463ab46.59ef64"]]},{"id":"3463ab46.59ef64","type":"function","z":"118d5eeb.c5a0c1","name":"reboot","func":"msg.payload = {command:\"reboot\"};\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":950,"y":420,"wires":[["e86cfd31.41f04"]]},{"id":"e86cfd31.41f04","type":"http request","z":"118d5eeb.c5a0c1","name":"Reboot","method":"PUT","ret":"txt","paytoqs":"ignore","url":"http://irtracker/status/cmd","tls":"","persist":false,"proxy":"","authType":"","x":1100,"y":420,"wires":[["dae2cf7e.ee876"]]},{"id":"fb0bee1b.54697","type":"function","z":"118d5eeb.c5a0c1","name":"IR Mapping","func":"if (!flow.get(\"lastmsgts\")) {\n    flow.set(\"lastmsgts\",new Date());\n} else {\n    var curTs = new Date();\n    if (curTs-flow.get(\"lastmsgts\")<500) {\n        return [];\n    }\n}\nflow.set(\"lastmsgts\",new Date());\nvar name;\nvar ret=[];\nswitch (msg.payload.data.lastCode) {\n    case \"0x20df4ab\":\n        name=\"entree\";\n    break;\n    case \"0x20dfca3\":\n        name=\"salon\";\n    break;\n    case \"0x20df2ad\":\n        name=\"cuisine\";\n    break;\n    case \"0x20dfaa5\":\n        ret[1] = {payload:{level:((flow.get(\"level\")|0)+1)%5}};\n        if (flow.get(\"tv\") == \"playing\") {\n            if (flow.get(\"level\") == 0) {\n                flow.set(\"locklevel\",true);\n            } else if (flow.get(\"level\") == 4) {\n                flow.set(\"locklevel\",false);\n            }\n        }\n        node.status({ \n            fill:\"green\",\n            shape:\"dot\",\n            text: `level ${ret[1].payload.level} ${flow.get(\"locklevel\")?\"locked\":\"\"}`\n        });\n    break;\n}\nif (name) {\n    var val = flow.get(name)?0:1;\n    node.status({ \n        fill:\"green\",\n        shape:\"dot\",\n        text: `${name}:${val}`\n    });\n    ret[0] = {payload:{name:name, state:val}};\n}\nreturn ret;","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":790,"y":160,"wires":[["510bd3ab.ecda6c"],["97dee70b.9ee8d8"]]},{"id":"97dee70b.9ee8d8","type":"function","z":"118d5eeb.c5a0c1","name":"Level Map","func":"const pinNames = [\"D1O2\",\"D12O3\",\"D123OH\",\"entree\",\"salon\",\"cuisine\"];\nif (msg.payload.level == flow.get(\"level\")) {\n    return [null,null];\n}\nret=[];\nif (msg.payload.level == 0) {\n    if (!flow.get(\"isoff\")) {\n        flow.set(\"prev-entree\",flow.get(\"entree\")|0);\n        flow.set(\"prev-salon\",flow.get(\"salon\")|0);\n        flow.set(\"prev-cuisine\",flow.get(\"cuisine\")|0);\n        flow.set(\"prev-level\",flow.get(\"level\")|0);\n        flow.set(\"isoff\",1);\n        ret[3] = {payload:{name:pinNames[3],state:1}};\n        ret[4] = {payload:{name:pinNames[4],state:0}};\n        ret[5] = {payload:{name:pinNames[5],state:1}};\n    }\n} else {\n    if (flow.get(\"isoff\")) {\n        flow.set(\"isoff\",0);\n\n        ret[3] = {payload:{name:pinNames[3],state:flow.get(\"prev-entree\")|0}};\n        ret[4] = {payload:{name:pinNames[4],state:flow.get(\"prev-salon\")|0}};\n        ret[5] = {payload:{name:pinNames[5],state:flow.get(\"prev-cuisine\")|0}};\n    }\n}\n\nswitch (msg.payload.level) {\n    case 1:\n        ret[0] = {payload:{name:pinNames[0],state:1}};\n        ret[1] = {payload:{name:pinNames[1],state:1}};\n        ret[2] = {payload:{name:pinNames[2],state:1}};\n    break;\n    case 2:\n        ret[0] = {payload:{name:pinNames[0],state:0}};\n        ret[1] = {payload:{name:pinNames[1],state:1}};\n        ret[2] = {payload:{name:pinNames[2],state:1}};\n    break;\n    case 3:\n        ret[1] = {payload:{name:pinNames[1],state:0}};\n        ret[2] = {payload:{name:pinNames[2],state:1}};\n    break;\n    case 4:\n        ret[2] = {payload:{name:pinNames[2],state:0}};\n    break;\n}\nflow.set(\"level\",msg.payload.level);\n\nnode.status({ \n    fill:\"green\",\n    shape:\"dot\",\n    text: flow.get(\"isoff\")?\"off lvl:\":\"on lvl:\" + flow.get(\"level\")\n});\n\nreturn [ret];","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":970,"y":220,"wires":[["510bd3ab.ecda6c"]]},{"id":"510bd3ab.ecda6c","type":"function","z":"118d5eeb.c5a0c1","name":"Parse Pins","func":"const pinNames = [\"D1O2\",\"D12O3\",\"D123OH\",\"entree\",\"salon\",\"cuisine\"];\n\nvar state = \"\";\nif (flow.get(\"rebooted\")) {\n    pinNames.forEach(pin => state+=flow.get(pin) == -1 ? 0 : flow.get(pin));\n    \n    node.status({ \n        fill:\"green\",\n        shape:\"dot\",\n        text: state\n    });\n    return {payload:{\n                eventBase: {version:0,value:\"DigitalPin\"},\n                eventId: {version:0,value:\"STATUS\"},\n                name:{version:0,value:msg.payload.name}, \n                state: {version:0,value:flow.get(msg.payload.name)}\n                }\n            };\n}\n\nif (flow.get(msg.payload.name) != msg.payload.state) {\n    pinNames.forEach(pin => state+=flow.get(pin) == -1 ? 0 : flow.get(pin));\n    \n    node.status({ \n        fill:\"green\",\n        shape:\"dot\",\n        text: state\n    });\n    flow.set(msg.payload.name,msg.payload.state);\n    return {payload:{\n                eventBase: {version:0,value:\"DigitalPin\"},\n                eventId: {version:0,value:\"STATUS\"},\n                name:{version:0,value:msg.payload.name}, \n                state: {version:0,value:msg.payload.state}\n                }\n            };\n}\n\nreturn null;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1210,"y":220,"wires":[["275a493d.987c36"]]},{"id":"275a493d.987c36","type":"http request","z":"118d5eeb.c5a0c1","name":"Update Pin","method":"PUT","ret":"obj","paytoqs":"ignore","url":"http://irtracker/status/","tls":"","persist":false,"proxy":"","authType":"","x":1210,"y":160,"wires":[["44b4ed32.6a1204"]]},{"id":"44b4ed32.6a1204","type":"function","z":"118d5eeb.c5a0c1","name":"save state","func":"flow.set(msg.payload.name,msg.payload.state);\nif (flow.get(\"rebooted\")) {\n    flow.set(\"numResetPins\",flow.get(\"numResetPins\")-1);\n    if (flow.get(\"numResetPins\") == 0) {\n        flow.set(\"rebooted\",false);\n    }\n}\nreturn {\"payload\":{\"rebooted\":flow.get(\"rebooted\"),\"numResetPins\":flow.get(\"numResetPins\"),...msg.payload}};","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1210,"y":100,"wires":[[]]},{"id":"b6b849d6.3c0958","type":"system-logs","z":"118d5eeb.c5a0c1","name":"Firestick","logtype":"Android","sshkeyfolder":"","address":"192.168.123.1","port":"","x":640,"y":220,"wires":[["748cd3bd.2a88fc"]]},{"id":"69400201.5f1f0c","type":"system-logs","z":"118d5eeb.c5a0c1","name":"Wifi Router","logtype":"MessageTail","sshkeyfolder":"./.ssh","address":"192.168.123.1","port":"2222","x":640,"y":280,"wires":[["1cbe3bbf.011574"]]},{"id":"1cbe3bbf.011574","type":"function","z":"118d5eeb.c5a0c1","name":"DHCP/Level","func":"var curStatus=false;\nvar statusChanged=false;\nif (msg.payload.includes(\"dnsmasq-dhcp\") &&\n    msg.payload.includes(\"88:bf:e4:ce:21:88\") &&\n    msg.payload.includes(\"DHCPOFFER\")){\n    if (!flow.get(\"human\")){\n        flow.set(\"human\",true);\n        curStatus=true;\n        statusChanged=true;\n    }\n}\n\nif (msg.payload.includes(\"hostapd\") &&\n    msg.payload.includes(\"88:bf:e4:ce:21:88\") &&\n    msg.payload.includes(\"disassociated\")){\n    if (flow.get(\"human\")){\n        flow.set(\"human\",false);\n        curStatus=false;\n        statusChanged=true;\n    }\n}\n\nif (statusChanged) {\n    node.status({ \n        fill:curStatus?\"green\":\"yellow\",\n        shape:curStatus?\"dot\":\"ring\",\n        text:`Human ${curStatus?\"home\":\"away\"}`\n    });\n    if (curStatus) {\n        return {payload:{level:flow.get(\"prev-level\")}};\n    } else {\n        return {payload:{level:0}};\n    }\n}\nreturn null;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":790,"y":280,"wires":[["97dee70b.9ee8d8"]]},{"id":"b05dfff4.e60c2","type":"http request","z":"118d5eeb.c5a0c1","name":"get pins","method":"POST","ret":"obj","paytoqs":"ignore","url":"http://irtracker/status/app","tls":"","persist":false,"proxy":"","authType":"","x":1000,"y":340,"wires":[["44be6f53.3cf8c"]]},{"id":"44be6f53.3cf8c","type":"function","z":"118d5eeb.c5a0c1","name":"Add payload","func":"flow.set(\"numResetPins\",\n    Object.keys(msg.payload)\n          .filter(pl => msg.payload[pl].name && Object.keys(msg.payload[pl]).find(pl2 => pl2 == \"state\")).length);\nreturn [Object.keys(msg.payload)\n    .filter(pl => msg.payload[pl].name && Object.keys(msg.payload[pl]).find(pl2 => pl2 == \"state\") )\n    .map(pl => {return {\"payload\": msg.payload[pl]}})]\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1210,"y":340,"wires":[["510bd3ab.ecda6c"]]},{"id":"dae2cf7e.ee876","type":"function","z":"118d5eeb.c5a0c1","name":"Set Rebooted Flag","func":"flow.set(\"rebooted\",true)\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1270,"y":420,"wires":[[]]},{"id":"14d12709.578b79","type":"function","z":"118d5eeb.c5a0c1","name":"Has Rebooted","func":"if (msg.payload.uptime_sec) {\n    if (!flow.get(\"uptime\")) {\n        flow.set(\"uptime\",msg.payload.uptime_sec);\n        node.status({ \n            fill:\"green\",\n            shape:\"dot\",\n            text: \"initilized\"\n        });\n    } else if (flow.get(\"uptime\") > msg.payload.uptime_sec) {\n        flow.set(\"rebooted\",true);\n        flow.set(\"uptime\",msg.payload.uptime_sec);\n        node.status({ \n            fill:\"red\",\n            shape:\"dot\",\n            text: \"rebooted\"\n        });\n    } else {\n        flow.set(\"uptime\",msg.payload.uptime_sec);\n        node.status({ \n            fill:\"green\",\n            shape:\"dot\",\n            text: `uptime ${new Date(msg.payload.uptime_sec*1000).toISOString().substr(11, 8)}`\n        });\n    }\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":800,"y":340,"wires":[["b05dfff4.e60c2"]]},{"id":"74aafbbd.7f6d34","type":"debug","z":"118d5eeb.c5a0c1","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":270,"y":200,"wires":[]},{"id":"cf4dfdf4.a8f6c","type":"function","z":"118d5eeb.c5a0c1","name":"Update Pins","func":"const pinNames = [\"D1O2\",\"D12O3\",\"D123OH\",\"entree\",\"salon\",\"cuisine\"];\nvar pl = msg.payload.data?msg.payload.data:msg.payload;\nif (pl.name) {\n    flow.set(pl.name.value?pl.name.value:pl.name,\n             pl.state.value?pl.state.value:pl.state);\n    \n    var state = \"\";\n    pinNames.forEach(pin => state+=flow.get(pin));\n    \n    node.status({ \n        fill:\"green\",\n        shape:\"dot\",\n        text: state\n    });\n    \n    return {\"payload\":pl};\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":790,"y":100,"wires":[["510bd3ab.ecda6c"]]},{"id":"5e792bde.29bbd4","type":"function","z":"118d5eeb.c5a0c1","name":"Refresh State","func":"","outputs":1,"noerr":0,"initialize":"// Code added here will be run once\n// whenever the node is started.\nsetInterval(()=>{node.send({\"payload\":{\"operation\":\"refreshState\"}})},300000);\nsetTimeout(()=>{node.send({\"payload\":{\"operation\":\"refreshState\"}})},1000);\n","finalize":"","libs":[],"x":260,"y":360,"wires":[["e63ab54d.cde7a8"]]},{"id":"e63ab54d.cde7a8","type":"http request","z":"118d5eeb.c5a0c1","name":"GetState","method":"POST","ret":"obj","paytoqs":"ignore","url":"http://irtracker/status/","tls":"","persist":false,"proxy":"","authType":"","x":440,"y":400,"wires":[["c45e94a8.c5e598"]]},{"id":"3783a7be.6a7dc8","type":"inject","z":"118d5eeb.c5a0c1","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":280,"y":440,"wires":[["e63ab54d.cde7a8"]]},{"id":"adfbfcfe.7c2ec","type":"websocket in","z":"d2844952.000748","name":"tracker","server":"46973b5e.af9224","client":"","x":100,"y":60,"wires":[["f83f9da7.4c05f"]]},{"id":"f83f9da7.4c05f","type":"switch","z":"d2844952.000748","name":"isvalid","property":"payload","propertyType":"msg","rules":[{"t":"cont","v":"\"mouse\"","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":250,"y":60,"wires":[["e3d6d3ee.647e8","8965c77b.8f2c08"],[]]},{"id":"351bae6d.020d32","type":"http request","z":"d2844952.000748","name":"","method":"PUT","ret":"txt","paytoqs":"ignore","url":"http://irtracker/status/cmd","tls":"","persist":false,"proxy":"","authType":"","x":690,"y":120,"wires":[[]]},{"id":"924d79f2.c867e8","type":"function","z":"d2844952.000748","name":"","func":"msg.payload = {\n  \"command\": \"trigger\",\n  \"name\": \"salon\",\n  \"param1\": \"TRIGGER\"\n};\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":520,"y":120,"wires":[["351bae6d.020d32"]]},{"id":"e3d6d3ee.647e8","type":"function","z":"d2844952.000748","name":"","func":"msg.payload = {\n  \"command\": \"trigger\",\n  \"name\": \"salon\",\n  \"param1\": \"TRIGGER\"\n};\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":520,"y":80,"wires":[["f202863b.cab578"]]},{"id":"f202863b.cab578","type":"http request","z":"d2844952.000748","name":"","method":"PUT","ret":"txt","paytoqs":"ignore","url":"http://irtracker/status/cmd","tls":"","persist":false,"proxy":"","authType":"","x":690,"y":80,"wires":[["924d79f2.c867e8"]]},{"id":"67cc40a.88f49c","type":"inject","z":"d2844952.000748","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":240,"y":100,"wires":[["e3d6d3ee.647e8","8965c77b.8f2c08"]]},{"id":"a0e18a5c.5a47d8","type":"function","z":"d2844952.000748","name":"","func":"msg.payload = {\n  \"command\": \"trigger\",\n  \"name\": \"entree\",\n  \"param1\": \"TRIGGER\"\n};\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":520,"y":200,"wires":[["65c87bf8.f132f4"]]},{"id":"65c87bf8.f132f4","type":"http request","z":"d2844952.000748","name":"","method":"PUT","ret":"txt","paytoqs":"ignore","url":"http://irtracker/status/cmd","tls":"","persist":false,"proxy":"","authType":"","x":690,"y":200,"wires":[[]]},{"id":"8965c77b.8f2c08","type":"function","z":"d2844952.000748","name":"","func":"msg.payload = {\n  \"command\": \"trigger\",\n  \"name\": \"entree\",\n  \"param1\": \"TRIGGER\"\n};\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":520,"y":160,"wires":[["d3190771.e78818"]]},{"id":"d3190771.e78818","type":"http request","z":"d2844952.000748","name":"","method":"PUT","ret":"txt","paytoqs":"ignore","url":"http://irtracker/status/cmd","tls":"","persist":false,"proxy":"","authType":"","x":690,"y":160,"wires":[["a0e18a5c.5a47d8"]]},{"id":"7c85173.bf743e8","type":"http in","z":"7e638570.8d34ac","name":"Alerts","url":"/grafanaaterts","method":"post","upload":false,"swaggerDoc":"","x":130,"y":100,"wires":[["125df271.0e540e","7048c6a5.2c9928"]]},{"id":"125df271.0e540e","type":"debug","z":"7e638570.8d34ac","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":370,"y":240,"wires":[]},{"id":"7048c6a5.2c9928","type":"http response","z":"7e638570.8d34ac","name":"All Good","statusCode":"200","headers":{},"x":350,"y":100,"wires":[]}]