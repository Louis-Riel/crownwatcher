version: "3.7"
services:
  dashboard:
    image: grafana/grafana
    user: 963:20000
    container_name: dashboard
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/serverconfig:/var/lib/grafana
    ports:
      - 80:3000
    depends_on:
      - influxdb
    healthcheck:
      test: [ "CMD-SHELL", "ls -l /proc/1/fd | grep -q socket" ]
      interval: 33s
      timeout: 1s
      retries: 10
    networks:
      - grafana
      - influxdb

  covid_exporter:
    build:
      args:
        UID: 965
        GID: 1001
        user: "sicko"
      context: ./covidexporter
    container_name: covid_exporter
    environment:
      TZ: "Canada/Eastern"
      NODE_ENV: production
      INFLUX_HOST: influxdb
      INFLUX_PORT: 8086
      INFLUX_ORG: none
      INFLUX_BUCKET: telegraf/autogen
      AUTH_TOKEN: 
    depends_on:
      - influxdb
    volumes:
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    command: "npm rum start"
    healthcheck: 
      #test: [ "CMD-SHELL", "ps -ef | egrep -q '[0-9]{2} node' && curl -s 'http://influxdb:8086/query?db=telegraf&q=%3BSELECT%20first(%22confirmed%22)%20FROM%20%22jhu_covid%22%20WHERE%20(%22country%22%20%3D%20%27Canada%27)%20AND%20(%22province%22%20%3D%20%27quebec%27)%20AND%20time%20%3E%3D%20now()%20-%201d%20GROUP%20BY%20time(1d)%2C%22province%22fill(null)&epoch=ms' | grep -q quebec" ]
      test: [ "CMD-SHELL", "ps -ef | egrep -q '[0-9]{2} node' " ]
      interval: 30s
      timeout: 1s
      retries: 10
    networks:
      - influxdb

  influxdb:
    image: influxdb:latest
    user: 964:1001
    healthcheck:
      test: [ "CMD-SHELL", "curl -s http://influxdb:8086/metrics | wc -c"  ]
      interval: 30s
      timeout: 1s
      retries: 10
    restart: unless-stopped
    container_name: influxdb
    ports:
      - 8086:8086
    environment:
      #- INFLUXDB_DATA_ENGINE=tsm1
      - INFLUXDB_REPORTING_DISABLED=false
      - INFLUXDB_DB=telegraf
      #- DOCKER_INFLUXDB_INIT_MODE=upgrade
      #- DOCKER_INFLUXDB_INIT_USERNAME=my-user
      #- DOCKER_INFLUXDB_INIT_PASSWORD=my-password
      #- DOCKER_INFLUXDB_INIT_ORG=my-org
      #- DOCKER_INFLUXDB_INIT_BUCKET=my-bucket
      #- DOCKER_INFLUXDB_INIT_UPGRADE_V1_CONFIG=/root/influxdb/influxdb.conf
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /srv/influxdb:/var/lib/influxdb
      - /srv/influxdb2:/var/lib/influxdb2
      - /srv/influxdb2cfg:/etc/influxdb2
    networks:
      - influxdb

  telegraf:
    #build:
    #  args:
    #    UID: 965
    #    GID: 1001
    #    user: "sicko"
    #  context: ./system/telegraf
    image: telegraf:latest
    user: "20400:967"   #967 docker group
    restart: unless-stopped
    container_name: telegraf
    runtime: nvidia
    environment:
#      - NVIDIA_VISIBLE_DEVICES=all
      - OST_PROC=/host/proc
    command: telegraf
    cap_add:
      - SYS_TIME
    depends_on:
      - influxdb
    volumes:
      - ./system/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /proc:/host/proc:ro
    networks:
      - influxdb

  ddwrt_exporter:
    build:
      args:
        UID: 965
        GID: 1001
        user: "sicko"
      context: ./system/ddwrtSnmpToStatsD
    user: "20400:967"   #967 docker group
    restart: unless-stopped
    container_name: ddwrtExporter
    command: "npm start"
    environment:
      - INFLUX_ADDR=influxdb
      - INFLUX_DB=telegraf
      - DDWRT_ADDR=192.168.1.1
      - PULL_PERIOD_MS=10000
    depends_on:
      - influxdb
    networks:
      - influxdb

networks:
  grafana:
  influxdb:
